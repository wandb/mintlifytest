{
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "https://trace.wandb.ai",
      "description": "W&B Weave Service API"
    }
  ],
  "info": {
    "title": "W&B Weave Service API",
    "version": "0.1.0",
    "description": "Comprehensive API for W&B Weave Service with MCP server integration for LLM tracking and monitoring.",
    "contact": {
      "name": "W&B Support",
      "url": "https://wandb.ai/support",
      "email": "support@wandb.ai"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "security": [
    {
      "HTTPBasic": []
    },
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/server_info": {
      "get": {
        "tags": ["Service"],
        "summary": "Get server information",
        "description": "Retrieve server configuration and status information",
        "operationId": "server_info_server_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerInfoRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "tags": ["Service"],
        "summary": "Health check endpoint",
        "description": "Check the health status of the service",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/call/start": {
      "post": {
        "tags": ["Calls"],
        "summary": "Start a new call",
        "description": "Initiate a new call session for tracking LLM interactions",
        "operationId": "call_start_call_start_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallStartReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Call started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallStartRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/call/end": {
      "post": {
        "tags": ["Calls"],
        "summary": "End a call",
        "description": "Complete a call session and record final metrics",
        "operationId": "call_end_call_end_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallEndReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Call ended successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallEndRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/call/read": {
      "post": {
        "tags": ["Calls"],
        "summary": "Read call data",
        "description": "Retrieve call information and metrics",
        "operationId": "call_read_call_read_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallReadReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Call data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallReadRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/call/update": {
      "post": {
        "tags": ["Calls"],
        "summary": "Update call data",
        "description": "Update call information and metrics",
        "operationId": "call_update_call_update_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallUpdateReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Call updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallUpdateRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/call/upsert_batch": {
      "post": {
        "tags": ["Calls"],
        "summary": "Batch upsert calls",
        "description": "Create or update multiple calls in a single batch operation",
        "operationId": "call_start_batch_call_upsert_batch_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallUpsertBatchReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch operation completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallUpsertBatchRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/calls/delete": {
      "post": {
        "tags": ["Calls"],
        "summary": "Delete calls",
        "description": "Delete multiple calls based on specified criteria",
        "operationId": "calls_delete_calls_delete_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallsDeleteReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Calls deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallsDeleteRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/calls/query_stats": {
      "post": {
        "tags": ["Calls"],
        "summary": "Query call statistics",
        "description": "Get aggregated statistics for calls based on query parameters",
        "operationId": "calls_query_stats_calls_query_stats_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallsQueryStatsReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Call statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallsQueryStatsRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/calls/stream_query": {
      "post": {
        "tags": ["Calls"],
        "summary": "Stream call query results",
        "description": "Stream call data matching query parameters in real-time",
        "operationId": "calls_query_stream_calls_stream_query_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallsStreamQueryReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stream established successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallsStreamQueryRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/cost/create": {
      "post": {
        "tags": ["Costs"],
        "summary": "Create cost record",
        "description": "Record cost information for LLM usage tracking",
        "operationId": "cost_create_cost_create_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCreateReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cost record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCreateRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/cost/query": {
      "post": {
        "tags": ["Costs"],
        "summary": "Query cost records",
        "description": "Retrieve cost data based on query parameters",
        "operationId": "cost_query_cost_query_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostQueryReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cost data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostQueryRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/cost/purge": {
      "post": {
        "tags": ["Costs"],
        "summary": "Purge cost records",
        "description": "Permanently delete cost records based on specified criteria",
        "operationId": "cost_purge_cost_purge_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostPurgeReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cost records purged successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostPurgeRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/feedback/create": {
      "post": {
        "tags": ["Feedback"],
        "summary": "Create feedback",
        "description": "Add feedback to a call or object for improving LLM performance",
        "operationId": "feedback_create_feedback_create_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackCreateReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackCreateRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/feedback/query": {
      "post": {
        "tags": ["Feedback"],
        "summary": "Query feedback",
        "description": "Retrieve feedback records based on query parameters",
        "operationId": "feedback_query_feedback_query_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackQueryReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackQueryRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/feedback/purge": {
      "post": {
        "tags": ["Feedback"],
        "summary": "Purge feedback",
        "description": "Permanently delete feedback records",
        "operationId": "feedback_purge_feedback_purge_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackPurgeReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback purged successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackPurgeRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "HTTPBasic": {
        "type": "http",
        "scheme": "basic"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ServerInfoRes": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "API version"
          },
          "environment": {
            "type": "string",
            "description": "Current environment"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Available features"
          }
        },
        "required": ["version", "environment"]
      },
      "HTTPValidationError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": ["loc", "msg", "type"]
      },
      "CallStartReq": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "string",
            "description": "Project identifier"
          },
          "parent_id": {
            "type": "string",
            "description": "Parent call identifier"
          },
          "op_name": {
            "type": "string",
            "description": "Operation name"
          },
          "inputs": {
            "type": "object",
            "description": "Input parameters for the call"
          },
          "attributes": {
            "type": "object",
            "description": "Additional attributes"
          }
        },
        "required": ["project_id", "op_name"]
      },
      "CallStartRes": {
        "type": "object",
        "properties": {
          "call_id": {
            "type": "string",
            "description": "Unique identifier for the created call"
          },
          "trace_id": {
            "type": "string",
            "description": "Trace identifier"
          }
        },
        "required": ["call_id"]
      },
      "CallEndReq": {
        "type": "object",
        "properties": {
          "call_id": {
            "type": "string",
            "description": "Call identifier to end"
          },
          "outputs": {
            "type": "object",
            "description": "Output results from the call"
          },
          "summary": {
            "type": "object",
            "description": "Call summary information"
          }
        },
        "required": ["call_id"]
      },
      "CallEndRes": {
        "type": "object",
        "properties": {
          "call_id": {
            "type": "string",
            "description": "Identifier of the ended call"
          },
          "ended_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when call ended"
          }
        },
        "required": ["call_id", "ended_at"]
      },
      "CallReadReq": {
        "type": "object",
        "properties": {
          "call_id": {
            "type": "string",
            "description": "Call identifier to read"
          },
          "include_costs": {
            "type": "boolean",
            "description": "Whether to include cost information"
          }
        },
        "required": ["call_id"]
      },
      "CallReadRes": {
        "type": "object",
        "properties": {
          "call_id": {
            "type": "string",
            "description": "Call identifier"
          },
          "project_id": {
            "type": "string",
            "description": "Project identifier"
          },
          "op_name": {
            "type": "string",
            "description": "Operation name"
          },
          "inputs": {
            "type": "object",
            "description": "Input parameters"
          },
          "outputs": {
            "type": "object",
            "description": "Output results"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "description": "Start timestamp"
          },
          "ended_at": {
            "type": "string",
            "format": "date-time",
            "description": "End timestamp"
          },
          "costs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostInfo"
            },
            "description": "Associated cost information"
          }
        },
        "required": ["call_id", "project_id", "op_name"]
      },
      "CallUpdateReq": {
        "type": "object",
        "properties": {
          "call_id": {
            "type": "string",
            "description": "Call identifier to update"
          },
          "inputs": {
            "type": "object",
            "description": "Updated input parameters"
          },
          "outputs": {
            "type": "object",
            "description": "Updated output results"
          },
          "attributes": {
            "type": "object",
            "description": "Updated attributes"
          }
        },
        "required": ["call_id"]
      },
      "CallUpdateRes": {
        "type": "object",
        "properties": {
          "call_id": {
            "type": "string",
            "description": "Updated call identifier"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Update timestamp"
          }
        },
        "required": ["call_id", "updated_at"]
      },
      "CallUpsertBatchReq": {
        "type": "object",
        "properties": {
          "calls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallUpsertItem"
            },
            "description": "List of calls to upsert"
          }
        },
        "required": ["calls"]
      },
      "CallUpsertItem": {
        "type": "object",
        "properties": {
          "call_id": {
            "type": "string",
            "description": "Call identifier"
          },
          "project_id": {
            "type": "string",
            "description": "Project identifier"
          },
          "op_name": {
            "type": "string",
            "description": "Operation name"
          },
          "inputs": {
            "type": "object",
            "description": "Input parameters"
          },
          "outputs": {
            "type": "object",
            "description": "Output results"
          }
        },
        "required": ["project_id", "op_name"]
      },
      "CallUpsertBatchRes": {
        "type": "object",
        "properties": {
          "processed": {
            "type": "integer",
            "description": "Number of calls processed"
          },
          "created": {
            "type": "integer",
            "description": "Number of calls created"
          },
          "updated": {
            "type": "integer",
            "description": "Number of calls updated"
          }
        },
        "required": ["processed", "created", "updated"]
      },
      "CallsDeleteReq": {
        "type": "object",
        "properties": {
          "call_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of call identifiers to delete"
          },
          "project_id": {
            "type": "string",
            "description": "Project identifier filter"
          },
          "before": {
            "type": "string",
            "format": "date-time",
            "description": "Delete calls before this timestamp"
          }
        }
      },
      "CallsDeleteRes": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "integer",
            "description": "Number of calls deleted"
          }
        },
        "required": ["deleted"]
      },
      "CallsQueryStatsReq": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "string",
            "description": "Project identifier filter"
          },
          "op_name": {
            "type": "string",
            "description": "Operation name filter"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Start time filter"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "End time filter"
          }
        }
      },
      "CallsQueryStatsRes": {
        "type": "object",
        "properties": {
          "total_calls": {
            "type": "integer",
            "description": "Total number of calls"
          },
          "total_cost": {
            "type": "number",
            "format": "float",
            "description": "Total cost"
          },
          "avg_duration": {
            "type": "number",
            "format": "float",
            "description": "Average duration in seconds"
          },
          "success_rate": {
            "type": "number",
            "format": "float",
            "description": "Success rate percentage"
          }
        },
        "required": ["total_calls"]
      },
      "CallsStreamQueryReq": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "string",
            "description": "Project identifier filter"
          },
          "op_name": {
            "type": "string",
            "description": "Operation name filter"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of results"
          }
        }
      },
      "CallsStreamQueryRes": {
        "type": "object",
        "properties": {
          "calls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallReadRes"
            },
            "description": "Stream of call results"
          },
          "has_more": {
            "type": "boolean",
            "description": "Whether more results are available"
          }
        },
        "required": ["calls", "has_more"]
      },
      "CostCreateReq": {
        "type": "object",
        "properties": {
          "call_id": {
            "type": "string",
            "description": "Associated call identifier"
          },
          "cost_type": {
            "type": "string",
            "description": "Type of cost (e.g., 'llm_tokens', 'compute')"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Cost amount"
          },
          "currency": {
            "type": "string",
            "description": "Currency code (e.g., 'USD')"
          },
          "provider": {
            "type": "string",
            "description": "Service provider"
          },
          "metadata": {
            "type": "object",
            "description": "Additional cost metadata"
          }
        },
        "required": ["call_id", "cost_type", "amount"]
      },
      "CostCreateRes": {
        "type": "object",
        "properties": {
          "cost_id": {
            "type": "string",
            "description": "Created cost record identifier"
          }
        },
        "required": ["cost_id"]
      },
      "CostQueryReq": {
        "type": "object",
        "properties": {
          "call_id": {
            "type": "string",
            "description": "Filter by call identifier"
          },
          "cost_type": {
            "type": "string",
            "description": "Filter by cost type"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Start time filter"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "End time filter"
          }
        }
      },
      "CostQueryRes": {
        "type": "object",
        "properties": {
          "costs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostInfo"
            },
            "description": "List of cost records"
          },
          "total_amount": {
            "type": "number",
            "format": "float",
            "description": "Total cost amount"
          }
        },
        "required": ["costs"]
      },
      "CostPurgeReq": {
        "type": "object",
        "properties": {
          "before": {
            "type": "string",
            "format": "date-time",
            "description": "Delete costs before this timestamp"
          },
          "call_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Delete costs for specific call IDs"
          }
        }
      },
      "CostPurgeRes": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "integer",
            "description": "Number of cost records deleted"
          }
        },
        "required": ["deleted"]
      },
      "CostInfo": {
        "type": "object",
        "properties": {
          "cost_id": {
            "type": "string",
            "description": "Cost record identifier"
          },
          "call_id": {
            "type": "string",
            "description": "Associated call identifier"
          },
          "cost_type": {
            "type": "string",
            "description": "Type of cost"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Cost amount"
          },
          "currency": {
            "type": "string",
            "description": "Currency code"
          },
          "provider": {
            "type": "string",
            "description": "Service provider"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          }
        },
        "required": ["cost_id", "call_id", "cost_type", "amount"]
      },
      "FeedbackCreateReq": {
        "type": "object",
        "properties": {
          "call_id": {
            "type": "string",
            "description": "Associated call identifier"
          },
          "feedback_type": {
            "type": "string",
            "description": "Type of feedback (e.g., 'rating', 'correction')"
          },
          "value": {
            "type": "object",
            "description": "Feedback value"
          },
          "note": {
            "type": "string",
            "description": "Additional feedback note"
          }
        },
        "required": ["call_id", "feedback_type", "value"]
      },
      "FeedbackCreateRes": {
        "type": "object",
        "properties": {
          "feedback_id": {
            "type": "string",
            "description": "Created feedback identifier"
          }
        },
        "required": ["feedback_id"]
      },
      "FeedbackQueryReq": {
        "type": "object",
        "properties": {
          "call_id": {
            "type": "string",
            "description": "Filter by call identifier"
          },
          "feedback_type": {
            "type": "string",
            "description": "Filter by feedback type"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Start time filter"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "End time filter"
          }
        }
      },
      "FeedbackQueryRes": {
        "type": "object",
        "properties": {
          "feedback": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeedbackInfo"
            },
            "description": "List of feedback records"
          }
        },
        "required": ["feedback"]
      },
      "FeedbackPurgeReq": {
        "type": "object",
        "properties": {
          "feedback_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of feedback identifiers to delete"
          },
          "before": {
            "type": "string",
            "format": "date-time",
            "description": "Delete feedback before this timestamp"
          }
        }
      },
      "FeedbackPurgeRes": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "integer",
            "description": "Number of feedback records deleted"
          }
        },
        "required": ["deleted"]
      },
      "FeedbackInfo": {
        "type": "object",
        "properties": {
          "feedback_id": {
            "type": "string",
            "description": "Feedback identifier"
          },
          "call_id": {
            "type": "string",
            "description": "Associated call identifier"
          },
          "feedback_type": {
            "type": "string",
            "description": "Type of feedback"
          },
          "value": {
            "type": "object",
            "description": "Feedback value"
          },
          "note": {
            "type": "string",
            "description": "Additional feedback note"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          }
        },
        "required": ["feedback_id", "call_id", "feedback_type", "value"]
      }
    }
  }
}